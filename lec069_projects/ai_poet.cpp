// ai_poet.cpp
// Terminal AI Poet - Procedural Poetry Generator (single-file C++)
// Compile: g++ ai_poet.cpp -o ai_poet -std=c++17
// Run: ./ai_poet

#include <iostream>
#include <vector>
#include <string>
#include <cstdlib>
#include <ctime>
using namespace std;

string random(const vector<string>& v) {
    return v[rand() % v.size()];
}

int main() {
    srand(time(0));
    vector<string> nouns = {"moon", "river", "machine", "memory", "storm", "shadow", "glass", "forest", "code", "dream"};
    vector<string> verbs = {"whispers", "flows", "burns", "sleeps", "fades", "remembers", "waits", "echoes", "breathes", "collapses"};
    vector<string> adjs = {"silent", "ancient", "broken", "endless", "forgotten", "electric", "fragile", "cold", "wild", "melancholy"};
    vector<string> preps = {"through", "beneath", "within", "beyond", "across", "under", "before", "after"};
    vector<string> articles = {"the", "a", "one"};
    vector<string> connectors = {"and", "but", "while", "as", "until"};

    cout << "=== Terminal AI Poet ===\n\n";
    int lines = 4 + rand()%3;

    for (int i=0; i<lines; i++) {
        int pattern = rand()%4;

        string line;
        switch(pattern) {
            case 0:
                line = random(articles) + " " + random(adjs) + " " + random(nouns) + " " + random(verbs);
                break;
            case 1:
                line = random(nouns) + " " + random(verbs) + " " + random(preps) + " " + random(articles) + " " + random(adjs) + " " + random(nouns);
                break;
            case 2:
                line = random(adjs) + " " + random(nouns) + " " + random(connectors) + " " + random(nouns) + " " + random(verbs);
                break;
            case 3:
                line = random(articles) + " " + random(nouns) + " " + random(verbs) + " " + random(preps) + " " + random(nouns);
                break;
        }

        // capitalize first letter
        line[0] = toupper(line[0]);
        cout << line << "." << endl;
    }

    cout << "\n-- Generated by your terminal's soul ðŸŒ™\n";
    return 0;
}
